import { execSync } from 'child_process';

/**
 * Генерирует changelog на основе разницы между main и release веткой
 */
export function getChangelog(version: string): string {
    try {
        const releaseBranch = `release/${version}`;
        // Get full commit messages including body between main and release branch
        // Using %B to get full commit message and adding a special separator between commits
        const commits = execSync(
            `git log main..${releaseBranch} --pretty=format:"%B---COMMIT_SEPARATOR---" --no-merges`,
            {
                encoding: 'utf-8'
            }
        ).trim();

        if (!commits) {
            return 'No changes found';
        }

        // Format the changelog following the standard format
        const header = `## [${version}] - ${new Date().toISOString().split('T')[0]}\n\n`;

        // Split commits and format them
        const formattedChanges = commits
            .split('---COMMIT_SEPARATOR---')
            .filter(Boolean)
            .map((commit) => {
                const lines = commit.split('\n').filter(Boolean);
                if (lines.length === 0) return '';

                const [subject, ...body] = lines;
                const trimmedSubject = subject.trim();

                // Format subject line - add dash if not present
                const formattedSubject = trimmedSubject[0] === '-' ? trimmedSubject : `- ${trimmedSubject}`;

                if (body.length === 0) {
                    return formattedSubject;
                }

                const formattedBody = body
                    .map((line) => {
                        const trimmedLine = line.trim();
                        if (line[0] === '-') {
                            return `    ${trimmedLine}`;
                        } else {
                            // Remove any existing dashes and add proper list item format
                            return `    - ${trimmedLine.replace(/^-+\s*/, '')}`;
                        }
                    })
                    .join('\n');

                return `${formattedSubject}\n${formattedBody}`;
            })
            .filter(Boolean)
            .join('\n\n');

        // Add tool signature
        const signature = '\n\n_Generated by [gitaid](https://github.com/dibenkobit/gitaid)_';

        return header + formattedChanges + signature;
    } catch (error) {
        console.error('Error getting changelog:', error);
        return 'Error generating changelog';
    }
}
